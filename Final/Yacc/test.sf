function subtract(x, y)



			integer x, y

			
			integer subtract

			integer nomatter

			subtract = x - y


end function subtract

program example


	integer a, b, c ! integers


	integer :: d ! real


	integer, dimension(10) :: e ! array with 10 integers


	integer, dimension(10), pointer :: p ! pointer to 10-integer array


	common /d/

	data / d / 20 /

	parameter (a = 10, b=2)


	interface ! interface for forward declarations




		



		subroutine multiply(x, y)



			integer x, y



		end subroutine multiply

		function add(w, z)



			integer w, z

			integer add

		end function add


	end interface


	c = e[10] + add( 1,2)
	e[10] = 200

	do a = 10, 20, 2
		exit
	end do

	if( .TRUE. ) then
		e[5] = 20
		if( .TRUE. ) then
			e[5] = 3
		else
			e[5] = 4
		end if
	end if

	call multiply( 1, 2)

	d = 1 + 400
	!println "hello "" world"
end program example

subroutine multiply(x, y)



			real x, y

			
			x = -x
			
			x = -x


end subroutine multiply

function add(w, z)



			integer w, z

			integer add

			
			w = -w

			w = -w
			
			add = w + z

end function add
